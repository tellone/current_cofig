,V
cp /home/tellone/.bash_aliases $repo/bash_aliases,V
cp /home/tellone/.bashrc $repo/.bashrc,V
fi,V
   rm $repo/.bashrc,V
if [ -f $repo/.bashrc ]; then,V
cp -r /home/tellone/.vim $repo/vim,V
rm -r $repo/vim,V
    rm $repo/.bash_aliases,V
if [ -f $repo/.bash_aliases ]; then,V
zle self-insert url-quote-magic,V
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS},v
zle:38: widgets can only be called when ZLE is active,v
autoload url-quote-magiczle self-insert url-quote-magic,v
autoload -U colors,V
colors,V
 ,v
-,v
N,v
namedir() { export $1=$PWD; : ~$1 },V
compinit,V
autoload compinit,V
# Load completions for Ruby, Git, etc.,V
autoload -Uz colors && colorszmodload -i zsh/complist # colorful listings,v
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORSi},V
,v
alias rerc="source /home/tellone/.zshrc"alias tu="top -o cpu" #processes sorted after cpu usagealias g="git status",V
autoload -Uz colors && colorszmodload -i zsh/complist # colorful listingszstyle ':completion:*' list-colors ${(s.:.)LS_COLORS},v
syn keyword zshPrecommand       glob noglob correct nocorrect exec command builtin - time,V
alias rerc="source /home/tellone/.zshrc"alias tu="top -o cpu" #processes sorted after cpu usagealias g="git status",v
alias sb='noglob sensible-browser',V
if [ -x /usr/bin/dircolors ]; then    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"    alias ls='ls --color=auto'    #alias dir='dir --color=auto'    #alias vdir='vdir --color=auto'    alias grep='grep --color=auto'    alias fgrep='fgrep --color=auto'    alias egrep='egrep --color=auto'fi# some more ls aliasesalias ll='ls -alF'alias la='ls -A'alias l='ls -CF',V
alias lsd='ls -ld *(-/DN)' # directories onlyalias sb='noglob sensible-browser'alias zmv='noglob zmv'alias ru='noglob ru,v
http://feeds.feedburner.com/Ruby5,v
if [ -x /usr/bin/dircolors ]; then    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"    alias ls='ls --color=auto'    #alias dir='dir --color=auto'    #alias vdir='vdir --color=auto'    alias grep='grep --color=auto'    alias fgrep='fgrep --color=auto'    alias egrep='egrep --color=auto'fi# some more ls aliasesalias ll='ls -alF'alias la='ls -A'alias l='ls -CF',v
dd if=/dev/sd''x'' count=''number_of_records'' status=noxfer | md5sum,v
mkdir -p ~/srccd ~/srchg clone http://vc.gerg.ca/hg/vcprompt/cd vcpromptmakecp vcprompt ~/bin/vcprompt,v
watch=(notme)HISTSIZE=100,V
I was razing, through my lifescraping the emtiness, with razorblades insidea dream feeder, devouring futures.The numbness society, is seeking me steadilythere were quiet lives slowly suffocatesstands a silent chair, with my name.Bell call, signals of completionline walkers, did  you wake up just nowWe already traveled any apparent enrichment.Until this world, slowly stagnated our pathsinto an edited version of timewhere all color or importance where left out.Here we must earn each wheezing breathrestarting at zero, to no effectcome let grab what we can get.,v
<p>   I was a disease through life <br />   an emptiness scrapers, razor inside <br />   a forward suction cleaner, devouring dreams</ p><p>   The numbness sälskap looking me steadily <br />   to which quiet life slowly suffocate <br />   there is a stationary with my name</ p><p>   At call, call completed <br />   line walkers, did you wake up until now <br />   I have already traveled, in any apparent enrichment</ p><p>   Like this stagnated my sky slowly <br />   into an edited version of the time <br />   where all gay or important left out</ p><p>   Stuck, the blood deserve every wheezing breath <br />   with death ståndes just outside my grasp <br />   currency effect is wh effect, this is all they get</ p>,v
#rvm section ,V
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM ac func,V
setopt rmstarsilent histignoredups,V
autoload -U colorscolorssetopt prompt_substPROMPT='%~ %{$fg_bold[black]%}$(vcprompt)→ %{$reset_color%}'# Set RPROMPT to have info show up on the right, too.############################## Other Options# setopt PRINT_EXIT_VALUEsetopt CORRECTsetopt CORRECTALLsetopt hist_ignore_dups     # ignore duplication command history listsetopt share_history        # share command history datasetopt HIST_IGNORE_SPACEsetopt APPEND_HISTORY # write history only when closingsetopt EXTENDED_HISTORY # add more info# Other tabbing options# setopt NO_AUTO_MENU# setopt BASH_AUTO_LIST############################## Variables# Quote pasted URLsautoload url-quote-magiczle -N self-insert url-quote-magicHISTFILE=~/.zsh_historySAVEHIST=10000HISTSIZE=10000REPORTTIME=10 # Show elapsed time if command took more than X secondsLISTMAX=0 # ask to complete if top of list would scroll off screen# Load completions for Ruby, Git, etc.autoload compinitcompinit# Make CTRL-W delete after other chars, not just spacesWORDCHARS=${WORDCHARS//[&=\/;\!#%\{]}bindkey -e,V
autoload -U colorscolorssetopt prompt_substPROMPT='%~ %{$fg_bold[black]%}$(vcprompt)→ %{$reset_color%}'# Set RPROMPT to have info show up on the right, too.############################## Other Options# setopt PRINT_EXIT_VALUEsetopt CORRECTsetopt CORRECTALLsetopt hist_ignore_dups     # ignore duplication command history listsetopt share_history        # share command history datasetopt HIST_IGNORE_SPACEsetopt APPEND_HISTORY # write history only when closingsetopt EXTENDED_HISTORY # add more info# Other tabbing options# setopt NO_AUTO_MENU# setopt BASH_AUTO_LIST############################## Variables# Quote pasted URLsautoload url-quote-magiczle -N self-insert url-quote-magicHISTFILE=~/.zsh_historySAVEHIST=10000HISTSIZE=10000REPORTTIME=10 # Show elapsed time if command took more than X secondsLISTMAX=0 # ask to complete if top of list would scroll off screen# Load completions for Ruby, Git, etc.autoload compinitcompinit# Make CTRL-W delete after other chars, not just spacesWORDCHARS=${WORDCHARS//[&=\/;\!#%\{]}bindkey -e,v
autoload -U colorscolorssetopt prompt_substPROMPT='%~ %{$fg_bold[black]%}$(vcprompt)→ %{$reset_color%}',v
zmodload -i zsh/mathfunc,V
zstyle :compinstall filename "$HOME/.zshrc",V
# The following lines were added by compinstall,V
zstyle ':mime:*' mailcap ~/.mailcap,V
zstyle ':mime:*' tty-browsers sensible-browser,V
zstyle ':mime:*' x-browsers sensible-browser,V
# Use modern completion system,V
zstyle ':completion:*' hosts localhost $friends tpope.us cunn.iling.us rebelongto.us,V
zstyle ':completion:*' urls http://www.tpope.net/ http://www.google.com/,V
if [ -n "$force_color_prompt" ]; then    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then	# We have color support; assume it's compliant with Ecma-48	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such	# a case would tend to support setf rather than setaf.)	color_prompt=yes    else	color_prompt=    fifi# Enable color support of ls and also add handy aliasesif [ -x /usr/bin/dircolors ]; then    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"    alias ls='ls --color=auto'    #alias dir='dir --color=auto'    #alias vdir='vdir --color=auto'    alias grep='grep --color=auto'    alias fgrep='fgrep --color=auto'    alias egrep='egrep --color=auto'fi# some more ls aliasesalias ll='ls -alF'alias la='ls -A'alias l='ls -CF',v
zstyle ':mime:*' x-browsers sensible-browserzstyle ':mime:*' tty-browsers sensible-browserzstyle ':mime:*' mailcap ~/.mailcap# The following lines were added by compinstallzstyle ':completion:*' add-space truezstyle -e ':completion:*' completer '        if [[ $_last_try != "$HISTNO$BUFFER$CURSOR" ]]; then            _last_try="$HISTNO$BUFFER$CURSOR"            reply=(_complete _ignored:complete _prefix _complete:full)        else            reply=(_complete _ignored:complete _prefix _complete:full _correct _approximate)        fi' #'zstyle ':completion::prefix:*' completer _complete _ignored:completezstyle ':completion:*' format 'Completing %d'zstyle ':completion:*' glob 1zstyle ':completion::complete:*:(all-|)files' ignored-patterns '*\~' '(|*/)CVS'zstyle ':completion::complete:*:(local-|)directories' ignored-patterns '(|*/)CVS'zstyle ':completion::complete:*' ignore-parents parent pwdzstyle ':completion::complete:rm::(all-|)files' ignored-patternszstyle ':completion::complete:rmdir::(local-|)directories' ignored-patternszstyle ':completion:*' group-name ''zstyle ':completion:*' hosts localhost $friends tpope.us cunn.iling.us rebelongto.uszstyle ':completion:*' urls http://www.tpope.net/ http://www.google.com/zstyle ':completion:*' insert-unambiguous true# NO NO NO!!! This makes things SLOW#zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}zstyle ':completion:*' list-colors no=00 fi=00 di=01\;34 pi=33 so=01\;35 bd=00\;35 cd=00\;34 or=00\;41 mi=00\;45 ex=01\;32zstyle ':completion:*' list-prompt '%SAt %p: Hit TAB for more, or the character to insert%s'zstyle ':completion:*' local localhost /var/www public_htmlzstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}'zstyle ':completion::full:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' '+r:|[._-/]=* r:|=* l:|[._-/]=* l:|=*'zstyle -e ':completion:*' max-errors 'reply=( $(( ($#PREFIX+$#SUFFIX+1)/3 )) numeric )'zstyle ':completion:*' menu selectzstyle ':completion:*:(xdvi|xpdf|gv|mpl):*' menu yes selectzstyle ':completion:*' original truezstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'zstyle ':completion:*' substitute 1zstyle ':completion:*' use-cache onzstyle ':completion:*' cache-path ~/.zsh/cachezstyle ':completion:*' users tpope root $USER ${watch/notme/}zstyle ':completion:*' verbose truezstyle ':completion:*:rm:*' ignore-line yeszstyle :compinstall filename "$HOME/.zshrc"autoload -U compinitcompinit -u# End of lines added by compinstallcompdef 'local expl; _description files expl "LaTeX aux file"; _files "$expl[@]" -g "*.aux"' bibtexcompdef 'local expl; _description files expl "picture file"; _files "$expl[@]" -g "*.(#i)(png|gif|jpeg|jpg|tiff|tif|pbm|pgm|ppm|xbm|xpm|ras(|t)|tga|rle|rgb|bmp|pcx|fits|pm)(-.)"' feh,V
zmodload -i zsh/mathfunc#zmodload -i zsh/complistautoload -U zrecompileautoload -U zmvautoload -U zsh-mime-setupautoload -U edit-command-line,v
},v
friends=($boxen roxy grex),V
fpath=($fpath ~/.zsh/functions ~/.zsh/functions.zwc ~/.rvm/scripts/zsh/Completion $HASHROCKET_DIR/dotmatrix/.zsh/functions),V
    done,V
        : ~${host%.tpope.us},V
        [ -d "$HOME/friends" ] && typeset ${host%.tpope.us}=$HOME/friends/${host%.tpope.us},V
        [ "${host%.tpope.us}" != `hostname` ] && family=($family $host),V
    for host in $boxen; do,V
if [ -d "$HOME/friends" ]; then,V
boxen=(matthew todd lucas gideon),V
. "$ENV",V
interactive=1,V
export ENV="$HOME/.shrc",V
[ -f "$HOME/.friends" ] && watch=(`cat "$HOME/.friends"`),V
setopt rmstarsilent histignoredupssetopt noclobber nonomatchsetopt completeinword extendedglobsetopt autocdif [[ $ZSH_VERSION == 4.<->* ]]; then    setopt histexpiredupsfirst histreduceblanksfifpath=($fpath ~/.zsh/functions ~/.zsh/functions.zwc ~/.rvm/scripts/zsh/Completion $HASHROCKET_DIR/dotmatrix/.zsh/functions)watch=(notme)[ -f "$HOME/.friends" ] && watch=(`cat "$HOME/.friends"`)HISTSIZE=100WORDCHARS='*?_-.[]~&;!#$%^(){}<>'PERIOD=3600periodic() { rehash }export ENV="$HOME/.shrc"interactive=1. "$ENV"[ ! -f "$HOME/.rvm/scripts/rvm" ] || . "$HOME/.rvm/scripts/rvm"#domains=(`egrep '^(search|domain)' /etc/resolv.conf 2>/dev/null`)#[[ -z $domains ]] || shift 1 domainsboxen=(matthew todd lucas gideon)if [ -d "$HOME/friends" ]; then    for host in $boxen; do        [ "${host%.tpope.us}" != `hostname` ] && family=($family $host)        [ -d "$HOME/friends" ] && typeset ${host%.tpope.us}=$HOME/friends/${host%.tpope.us}        : ~${host%.tpope.us}    donefiif [ -n "$USERPROFILE" ] && which cygpath >/dev/null; then    typeset home="`cygpath "$USERPROFILE"`"    typeset docs="$home/My Documents"    typeset desktop="`cygpath -D 2>/dev/null`"    [ -n "$APPDATA" ] || APPDATA="$USERPROFILE/Application Data"    typeset appdata="`cygpath "$APPDATA"`"    : ~home ~docs ~desktop ~appdataelif [ -d "$HOME/Documents" ]; then    typeset docs="$HOME/Documents"    : ~docsfiif [ -x "`which ruby 2>/dev/null`" ]; then    gems="`ruby -rubygems -e 'puts Gem.dir + %{/gems}' 2>/dev/null`"    [ -z gems ] || : ~gemsfinamedir() { export $1=$PWD; : ~$1 }friends=($boxen roxy grex),v
HISTCONTROL=ignoredups:ignorespace# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)HISTSIZE=1000HISTFILESIZE=2000# check the window size after each command and, if necessary,# update the values of LINES and COLUMNS.shopt -s checkwinsize# make less more friendly for non-text input files, see lesspipe(1)[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"# set variable identifying the chroot you work in (used in the prompt below)if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then    debian_chroot=$(cat /etc/debian_chroot)fiif [ -n "$force_color_prompt" ]; then    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then	# We have color support; assume it's compliant with Ecma-48	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such	# a case would tend to support setf rather than setaf.)	color_prompt=yes    else	color_prompt=    fifiunset color_prompt force_color_prompt,v
setopt rmstarsilent histignoredupssetopt noclobber nonomatchsetopt completeinword extendedglobsetopt autocdif [[ $ZSH_VERSION == 4.<->* ]]; then    setopt histexpiredupsfirst histreduceblanksfifpath=($fpath ~/.zsh/functions ~/.zsh/functions.zwc ~/.rvm/scripts/zsh/Completion $HASHROCKET_DIR/dotmatrix/.zsh/functions)watch=(notme)[ -f "$HOME/.friends" ] && watch=(`cat "$HOME/.friends"`)HISTSIZE=100WORDCHARS='*?_-.[]~&;!#$%^(){}<>'PERIOD=3600periodic() { rehash }export ENV="$HOME/.shrc"interactive=1. "$ENV"[ ! -f "$HOME/.rvm/scripts/rvm" ] || . "$HOME/.rvm/scripts/rvm"#domains=(`egrep '^(search|domain)' /etc/resolv.conf 2>/dev/null`)#[[ -z $domains ]] || shift 1 domainsboxen=(matthew todd lucas gideon)if [ -d "$HOME/friends" ]; then    for host in $boxen; do        [ "${host%.tpope.us}" != `hostname` ] && family=($family $host)        [ -d "$HOME/friends" ] && typeset ${host%.tpope.us}=$HOME/friends/${host%.tpope.us}        : ~${host%.tpope.us}    donefiif [ -n "$USERPROFILE" ] && which cygpath >/dev/null; then    typeset home="`cygpath "$USERPROFILE"`"    typeset docs="$home/My Documents"    typeset desktop="`cygpath -D 2>/dev/null`"    [ -n "$APPDATA" ] || APPDATA="$USERPROFILE/Application Data"    typeset appdata="`cygpath "$APPDATA"`"    : ~home ~docs ~desktop ~appdataelif [ -d "$HOME/Documents" ]; then    typeset docs="$HOME/Documents"    : ~docsfiif [ -x "`which ruby 2>/dev/null`" ]; then    gems="`ruby -rubygems -e 'puts Gem.dir + %{/gems}' 2>/dev/null`"    [ -z gems ] || : ~gemsfinamedir() { export $1=$PWD; : ~$1 },v
# append to the history file, don't overwrite it,V
shopt -s histappend,V
# Add an "alert" alias for long running commands.  Use like so:,V
#   sleep 10; alert,V
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '%''s/^%s*[0-9]%+%s*//;s/[;&|]%s*alert$//'%'')"',V
# enable programmable completion features (you don't need to enable# this, if it's already enabled in /etc/bash.bashrc and /etc/profile# sources /etc/bash.bashrc).if [ -f /etc/bash_completion ] && ! shopt -oq posix; then    . /etc/bash_completionfiPS1="\u:\w$ ",v
#force_color_prompt=yes,V
# should be on the output of commands, not on the prompt,V
# off by default to not distract the user: the focus in a terminal window,V
# uncomment for a colored prompt, if the terminal has the capability; turned,V
# set a fancy prompt (non-color, unless we know we "want" color),V
esac,V
    xterm-color) color_prompt=yes;;,V
case "$TERM" in,V
# ... or force ignoredups and ignorespace,V
# don't put duplicate lines in the history. See bash(1) for more options,V
# If not running interactively, don't do anything,V
[ -z "$PS1" ] && return,V
if [ -f $cofig1/zsh_config ]; then    . $cofig1/zsh_configelse    echo "No file zsh_config found"fi,V
#rvm section [[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM ac func#vim sectionif [ -f ~/buffer ]; then    rm ~/bufferfigvim(){ /usr/bin/gvim -f "$@" & true; },v
if [ -n "$force_color_prompt" ]; then    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then	# We have color support; assume it's compliant with Ecma-48	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such	# a case would tend to support setf rather than setaf.)	color_prompt=yes    else	color_prompt=    fifi,v
if [ -n "$force_color_prompt" ]; then    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then,V
# If not running interactively, don't do anything[ -z "$PS1" ] && return# don't put duplicate lines in the history. See bash(1) for more options# ... or force ignoredups and ignorespaceHISTCONTROL=ignoredups:ignorespace# append to the history file, don't overwrite itshopt -s histappend# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)HISTSIZE=1000HISTFILESIZE=2000# check the window size after each command and, if necessary,# update the values of LINES and COLUMNS.shopt -s checkwinsize# make less more friendly for non-text input files, see lesspipe(1)[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"# set variable identifying the chroot you work in (used in the prompt below)if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then    debian_chroot=$(cat /etc/debian_chroot)fi# set a fancy prompt (non-color, unless we know we "want" color)case "$TERM" in    xterm-color) color_prompt=yes;;esac# uncomment for a colored prompt, if the terminal has the capability; turned# off by default to not distract the user: the focus in a terminal window# should be on the output of commands, not on the prompt#force_color_prompt=yes,v
# Turn on some options.setopt auto_cd# Change directory by typing a directory name on its own.setopt extended_glob # Turn on the more powerful pattern matching features.# Set up the promptautoload -Uz promptinitpromptinitPS1="zsh|tellone:%~%%$ " setopt histignorealldups sharehistory# Use emacs keybindings even if our EDITOR is set to vibindkey -e# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:HISTSIZE=1000SAVEHIST=1000HISTFILE=~/.zsh_history,v
# Turn on some options.setopt auto_cd# Change directory by typing a directory name on its own.setopt extended_glob # Turn on the more powerful pattern matching features.# Set up the promptautoload -Uz promptinitpromptinitPS1="zsh|tellone:%~%%$ " setopt histignorealldups sharehistory# Use emacs keybindings even if our EDITOR is set to vibindkey -e# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:HISTSIZE=1000SAVEHIST=1000HISTFILE=~/.zsh_history# Use modern completion systemautoload -Uz compinitcompinitzstyle ':completion:*' auto-description 'specify: %d'zstyle ':completion:*' completer _expand _complete _correct _approximatezstyle ':completion:*' format 'Completing %d'zstyle ':completion:*' group-name ''zstyle ':completion:*' menu select=2eval "$(dircolors -b)"zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}zstyle ':completion:*' list-colors ''zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%szstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'zstyle ':completion:*' menu select=longzstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%szstyle ':completion:*' use-compctl falsezstyle ':completion:*' verbose truezstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd',v
