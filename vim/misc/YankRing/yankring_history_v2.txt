let,v
\,v
,v
\author{Filip Pettersson}\title{\huge Hej},V
,V
\date{}           % Blir dagens datum om det utelämnas,V
\author{ Filip Pettersson (tf06fp0) \\\\ <tf06fp0@student.lth.se> \\\\ 871026-3339},V
\title{\hrule  Hartree-Fock-approximation \hrule},V
\newpage,V
\thispagestyle{empty} %inget sidnummer på omslagssidan,V
\maketitle ,V
\begin{document} ,V
\documentclass[pdftex,a4paper]{article}\usepackage[T1]{fontenc}\usepackage[english]{babel}                                     % rubriker (t ex "Innehållsförteckning")\usepackage{fancyvrb}           % För programlistor med tabulatorer%%% remove comment delimiter ('%') and specify parameters if required\usepackage[pdftex]{graphicx}%Mathematica importerat bibliotek OBS måste adderas under MikTeX "`Settings"'%samt (för intellitype) köra "`Import TeX command"' under tools menyn i TeXnicCenter%\usepackage{notebook2e, latexsym} %\usepackage{pstricks} %för att rendera vectorgrafik exporterad som pstricks TeX-kod från Dia\fvset{tabsize=4}               % Tabulatorpositioner\fvset{fontsize=\small}         % Lagom storlek för programlistor\title{\hrule  Hartree-Fock-approximation \hrule}\author{ Filip Pettersson (tf06fp0) \\\\ <tf06fp0@student.lth.se> \\\\ 871026-3339}\date{}           % Blir dagens datum om det utelämnas%några kommandon som ska undvika att bilderna hamnar på fel ställe\renewcommand{\topfraction}{0.95}	%öka andelen av sidan som får innehålla figurer (från 70%)\renewcommand{\floatpagefraction}{1.0} %höj hur stor en figur måste vara för att få en egen sida (från 50%)\headheight     0.0in\topmargin      0.1in\textheight			22cm%OBS notera att det inte finns någon "`bottom margin"' i LaTeX - det styrs av de tre som är angivna\begin{document} \maketitle \thispagestyle{empty} %inget sidnummer på omslagssidan\newpage,V
\begin{center},V
\begin{left},V
\end{center},V
\begin{centering},V
\usepackage{url,booktabs,graphicx},V
\usepackage{fancyhdr,fancybox,fancyvrb},V
\usepackage{microtype},V
\usepackage[colorlinks=true]{hyperref},V
\documentclass[a4paper,12pt]{article} \usepackage [utf8x]{inputenc} \usepackage[pdftex]{graphicx} \usepackage{epstopdf} \usepackage{helvet} \usepackage{latexsym}\usepackage{subfig}\usepackage{sidecap}\usepackage{float}\usepackage{wrapfig}\usepackage[T1]{fontenc},V
\documentclass[a4paper,10pt]{article}\usepackage[utf8]{inputenc}\usepackage[english]{babel}\usepackage{amssymb,amsmath}\usepackage{url,booktabs,graphicx}\usepackage{fancyhdr,fancybox,fancyvrb}\usepackage{multicol,a4wide}\usepackage{microtype}\usepackage[colorlinks=true]{hyperref},V
\renewcommand{\rmdefault}{ppl}\hfuzz 5pt\renewcommand{\rmdefault}{ppl}\newcommand{\degr}{$^\circ$}\newcommand{\pic}[3]{\begin{figure}[htb]\begin{center}\includegraphics[width=0.85\textwidth]{#3}\caption{\label{#2}#1}\end{center}\end{figure}},V
\newcommand{\keywords}{AMS, SSAMS, rare isotope, meteorites},V
\renewenvironment{abstract}{\author{Kaj Jansson \and Filip Pettersson},V
\begin{minipage}{0.8\textwidth},V
\noindent{\bfseries \abstractname :}}{\\ \\,V
\noindent{\bfseries Keywords:} \keywords,V
\noindent{\bfseries Keywords:} \keywords\author{Kaj Jansson \and Filip Pettersson},V
\pagestyle{fancy},V
\end{minipage},V
\vfill,V
\end{center}},V
\fvset{xleftmargin=0mm, xrightmargin=0mm, samepage=false, frame=none, framerule=0.2mm, framesep=1.5mm, numbers=left, numbersep=10pt},V
\setcounter{page}{0},V
\thispagestyle{empty},V
\maketitle,V
\thispagestyle{empty},V
\end{abstract},V
This paper is a short summary of the basic operation and principles of an accelerator mass spectrometry system. Tandem accelerator mass spectrometry and single stage accelerator mass spectrometry are explained and compared. One of the fields where accelerator mass spectrometry has become an important tool is the examination of extraterrestrial materials which provide knowledge about things like past cosmic ray fluxes and the creation and life in space of meteorites. This field is summarized to show how accelerator mass spectrometry can be used in science.,V
\begin{abstract},V
\bibliography{fyst18_-_ams},V
\bibliographystyle{unsrt},V
\section{}\end{document},V
" vim:fdm=marker:ff=unix:noet:ts=4:sw=4,V
",V
nnoremap <leader>j dd.,V
  autocmd FileType matlddab                 setlocal ai et sta sw=4 sts=4 ,V
  autocmd Filetype matlab                 silent! compiler mlint,V
nmap <leader>o :BufExplorer<cr>,V
let g:bufExplorerShowRelativePath=1,V
let g:bufExplorerDefaultHelp=0,V
" => bufExplorer plugin,V
refPath="/home/tellone/Documents/quickrefs"ref="$1.pdf",V
let g:pathogen_disable=['localColorSchemes'],V
/,v
let g:pathogen_disable=['localColorSchemes'],V
"Base name of disabled bundles,V
",v
,V
fi,V
alias man="TERMINFO=~/.terminfo/ LESS=C TERM=mostlike PAGER=less man",V
    rm -r $repo/vim,V
if [ -d $repo/vim ]; then,V
    rm $repo/plug_list.txt,V
if [ -f $repo/plug_list.txt ]; then,V
rm ~/.oh-my-zsh/themes/tellone.zsh-theme,V
if [ -f ~/.oh-my-zsh/themes/tellone.zsh-theme ]; then,V
    rm -r $repo/bin,V
if [ -d $repo/bin ]; then,V
  autocmd BufReadCmd *.jar call zip#Browse(expand("<amatch>")),V
 ,v
    autocmd BufReadCmd *.jar call zip#Browse(expand("<amatch>"))    autocmd FileReadCmd *.doc execute "read! antiword \"<afile>\"",V
    autocmd BufWritePre,FileWritePre /etc/* if &ft == "dns" |          \ exe "normal msHmt" |          \ exe "gl/^\\s*\\d\\+\\s*;\\s*Serial$/normal ^\<C-A>" |          \ exe "normal g`tztg`s" |          \ endif    autocmd BufReadPre *.pdf setlocal binary    autocmd BufReadCmd *.jar call zip#Browse(expand("<amatch>"))    autocmd FileReadCmd *.doc execute "read! antiword \"<afile>\""    autocmd CursorHold,BufWritePost,BufReadPost,BufLeave *      \ if isdirectory(expand("<amatch>:h")) | let &swapfile = &modified | endif,V
  autocmd BufNewFile,BufRead *.CBL,*.COB,*.LIB  set ft=cobol,V
no Python documentation found for '__add__',V
line    8:Traceback (most recent call last):line    8:  File "<string>", line 1, in <module>line    8:NameError: name 'out' is not defined,v
if [ -d "$HOME/gitrepos/myProjects" ]; then    typeset mypro="$HOME/gitrepos/myProjects"    : ~myprofi,V
  autocmd FileType c,cpp,cs,perl,php,aspperl,css let b:surround_101 = "\r\n}",V
let pymode_lint_checker = "pep8",V
"PyMode,V
e,v
l,v
x,v
      post :create, :account => {"link" => "https://twitter.com/#!/Zorrriux"},V
  end,V
    redirect_to :action => index,V
  def create,V
        \ if exists('g:Powerline_loaded') |          \ silent! call Pl#Load() |        \ endif ,V
" <+FILENAME+> - <+TITLE+>,V
        \ if exists('g:Powerline_loaded') |          \ sinlent! execute "Pl#Load" |        \ endif ,V
" if the  input parameter is  empty, display  the current local  color scheme." otherwise, set the local color scheme to what is specified and change colors" is necessary.function! <SID>SetLocalColors(colorChoice)  if (a:colorChoice == "")    echo "Local color scheme is:  " . (exists("b:colorscheme") ? b:colorscheme : "NONE")  else    le:t b:colorscheme = a:colorChoice    call s:ChangeColors()  endifendfunctionfunction! <SID>RemoveLocalColors()  " suppress the error message  silent! execute "unlet b:colorscheme"  call s:ChangeColors()endfunction" if the  input parameter is empty,  display the current window  color scheme." otherwise,  set the  window color  scheme to  what is  specified and  change" colors is necessary.function! <SID>SetWindowColors(colorChoice)  if (a:colorChoice == "")    echo "Window color scheme is:  " . (exists("w:colorscheme") ? w:colorscheme : "NONE")  else    let w:colorscheme = a:colorChoice    call s:ChangeColors()  endifendfunctionfunction! <SID>RemoveWindowColors()  " suppress the error message  silent! execute "unlet w:colorscheme"  call s:ChangeColors()endfunctioncom! -nargs=? Setwindowcolors call s:SetWindowColors(<q-args>)com! Removewindowcolors call s:RemoveWindowColors()com! -nargs=? Setlocalcolors call s:SetLocalColors(<q-args>)com! Removelocalcolors call s:RemoveLocalColors()" change the colorscheme and update the global colorscheme variablecom! -nargs=1 Globalscheme colorscheme <args> | let g:colorscheme = g:colors_namenmap <leader>öw :execute "Setwindowcolors " . input("Enter window colorscheme [" . (exists("w:colorscheme") ? w:colorscheme : "NONE") . "]:  ")<cr>nmap <leader>öö :execute "Setlocalcolors " . input("Enter local colorscheme [" . (exists("b:colorscheme") ? b:colorscheme : "NONE") . "]:  ")<cr>nmap <leader>ög :execute "Globalscheme " . input("Enter global colorscheme [" . (exists("g:colorscheme") ? g:colorscheme : "NONE") . "]:  ")<cr>nmap <leader>öd :Removewindowcolors<cr>nmap <leader>ör :Removelocalcolors<cr>,V
augroup vimrcs  au!  au bufwritepost /home/tellone/.vim/.vimrc         \ source /home/tellone/.vim/.vimrc |        \ if exists('g:Powerline_loaded') |          \ silent! call Pl#Load() |        \ endif augroup END,V
cno $c e <C-\>eCurrentFileDir("e")<cr>,V
i,v
index,v
  def create    redirect_to :action => index  end,V
      pending("redirection"),V
{,v
